---
version: '3'

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: 'confluentinc/cp-kafka:latest'
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://host.docker.internal:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  user-db:
    image: 'postgres:latest'
    hostname: postgres
    container_name: user-db
    ports:
      - 5432:5432
    command: "postgres -c wal_level=logical"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
  user-service:
    build:
      context: user-service
      dockerfile: Dockerfile
    hostname: user-service
    container_name: user-service
    depends_on:
      - user-db
      - kafka
    ports:
      - 8080:8080
    environment:
      API_URL: host.docker.internal
      KAFKA_URL: host.docker.internal:9092
  user-stream:
    build:
      context: user-stream
      dockerfile: Dockerfile
    container_name: user-stream
    ports:
     - 8082:8082
    environment:
      KAFKA_URL: host.docker.internal:9092
  user-ui:
    build:
      context: UI
      dockerfile: Dockerfile
    hostname: user-ui
    container_name: user-ui
    ports:
      - 3000:3000
    
